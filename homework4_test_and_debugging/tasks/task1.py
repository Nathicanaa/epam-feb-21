"""
Write a function that gets file path as an argument.
Read the first line of the file.
If first line is a number return true if number in an interval [1, 3)*
and false otherwise.
In case of any error, a ValueError should be thrown.
Write a test for that function using pytest library.
You should not use any existing file on disc and create files inside tests.
Definition of done:
 - function is created
 - function is properly formatted
 - function has positive and negative tests
 - tests do a cleanup and remove remove files generated by tests
You will learn:
 - how to test Exceptional cases
 - how to clean up after tests
 - how to check if file exists**
 - how to handle*** and raise**** exceptions in test. Use sample from the documentation.
* https://en.wikipedia.org/wiki/Interval_(mathematics)#Terminology
** https://docs.python.org/3/library/os.path.html
*** https://docs.python.org/3/tutorial/errors.html#handling-exceptions
**** https://docs.python.org/3/tutorial/errors.html#raising-exceptions
"""


def read_magic_number(path: str) -> bool:
    """
    Opens a file , reads the first line and checks is the first line is a number that
    >= 1 and < 3
    Args:
        path: a path to the file

    Returns: true if the first line of the file is number which is >= 1 and <3
    false otherwise
    """
    try:
        with open(path, "r", encoding="utf-8") as fi:
            data = fi.readline().strip()
            return 1 <= float(data) < 3
    except FileNotFoundError:
        raise ValueError("File doesn't exist!")
    except ValueError:
        raise ValueError(f"Data {data} has wrong format")
